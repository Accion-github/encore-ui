@import 'vars';

.inputBorderPadding() {
    border: 1px solid @inputBorder;
    padding: 3px 5px;
}


/* Form Fields & Fieldsets */

.rx-form {
    margin: 15px 0 0;
}

.form-item {
    margin-top: 5px;
    .flexbox();
    .flex-flow(row nowrap);
    .justify-content(flex-start);
    .align-items(baseline);
}

.text-area-label {
    &.form-item {
        .align-items(flex-start);
    }
}

.rx-form-fieldset > fieldset {
    width: 100%;
    .full-width .option-table {
        width: 100%;
    }
}

.form-description,
.form-item {
    margin-bottom: 15px;
}

.field-label,
.field-legend, {
    color: @subduedTitle;
    font-size: 1.1em;
    .flex(0 0 @fieldLabelWidth);
}

.field-content {
    .flexbox();
    .flex(1 auto);
    .flex-flow(row wrap);
    .justify-content(flex-start);
    .align-items(center);

    .field-prefix,
    .field-suffix {
        font-size: 1.2em;
    }
    .field-prefix {
        margin-right: 5px;
    }
    .field-suffix {
        margin-left: 5px;
    }

    .field-description {
        .flex(1 100%);
        font-size: 0.8em;
        font-style: italic;
        margin-top: 5px;
    }
}

/* Input fields */

.field-input {
    input,
    select {
        color: @inputColor;
        font-size: 1.2em;

        &.ng-valid.ng-dirty {
            border-color: @inputBorderValid;
        }

        &.ng-invalid.ng-dirty {
            border-color: @inputBorderInvalid;
        }
    }

    input,
    .field-select {
        background: @white;
        max-width: 100%;
        box-sizing: border-box;
    }

    textarea {
        .inputBorderPadding;
        background-color: #fff;
        width: 100%;
        position: relative;
        z-index: 2;
        box-sizing: border-box;
    }

    input {
        width: @fieldInputWidth;
        .inputBorderPadding;

        &[type="number"] {
            width: @fieldInputNumberWidth;
        }

        &[type="radio"],
        &[type="checkbox"] {
            width: auto;
            max-width: none;
            font-size: 1em;
            vertical-align: middle;
        }
    }
}

/*
 * @bugfix Input field is marked as invalid before a user has done anything on form
 * @browsers FF
 * @see http://stackoverflow.com/questions/17209057/firefox-draws-red-border-on-required-select-box
 */
.ng-pristine .field-input .ng-invalid-required {
    box-shadow: none;
}


/* Inline error messages */
.field-input-wrapper {
    .inline-error {
        color: #ff2400;
        font-weight: 900;
        margin-top: 5px;
    }
}

/* Dropdowns */

.field-select {
    display: inline-block;
    position: relative;
    width: @fieldSelectWidth;

    select {
        width: 100%;
        margin: 0;
        border-radius: 0;
        background: #fff;
        border: none;
        outline: none;
        display: inline-block;
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        cursor: pointer;
        .inputBorderPadding;
    }

    &:before {
        // background so long text doesn't show behind caret
        content: '';
        right: 1px;
        top: 1px;
        width: 20px;
        height: 93%;
        background: #fff;
        position: absolute;
        pointer-events: none;
        display: block;
    }

    &:after {
        // down caret from font awesome
        content: '\f0d7';
        font-family: FontAwesome;
        font-size: 15px;
        color: #aaa;
        right: 10px;
        top: 7px;
        padding: 0;
        position: absolute;
        pointer-events: none;
    }
}

// User select element in Account section of nav

.rx-app-nav-item .field-select {
    select {
        background: #404140;
        border: 1px solid #3a3a3a;
    }
    &:before {
        background: #404140;
    }
    &:after {
        right: 10px;
        top: 5px;
    }
}

.account-users {
    float: right;
    box-sizing: border-box;
    width: 50%;
    select {
        border-radius: 0;
    }
}

.option-table {
    // we want the table to not look ugly when stretched across the screen
    width: auto;
    // we also want a semi-consistent width, but not too wide for modals
    min-width: 39em;

    td:not(.empty-data) {
        // remove default padding from td's so that we can make the label take up the full room
        padding: 0;
    }
    label {
        // add padding to labels so they take up the entire cell's space
        display: block;
        padding: @tableCellPadding;
        cursor: pointer;
    }
    .option-table-input {
        text-align: center;
        line-height: 0;
    }
    .current td {
        color: #3AB661;
    }
    // @note KL: I'd like to stick with just adding the background to the <tr>, but
    // we need to make the selector more specific to override the table-stripe styles.
    .selected td {
        background: @tableRowSelected;
        border-color: #bad4bb;
        // this 'double' makes it so that the border-color applies to the top border as well
        // @see http://stackoverflow.com/questions/7942212/css-table-row-border-color-with-border-collapse
        border-style: double;
    }
}

/* Submit buttons */

.form-actions {
    padding: 20px 0;
}

.form-action {
    // override default button styles
    background: transparent;
    margin: 0;
    padding: 0;
    border: 0;
    cursor: pointer;
    font-size: 1.2em;

    &.submit {
        color: @actionGreen;
        margin-right: 1em;
        &:hover,
        &:focus {
            color: @actionGreenHover;
        }
        &[disabled="disabled"] {
            color: @subduedText;
            cursor: not-allowed;
        }
    }
    &.cancel {
        color: @subduedText;
        &:hover,
        &:focus {
            color: @subduedTextHover;
        }
    }
}


/* Compressed Layout */

.rx-form.layout-compressed {
    .rx-form-row {
        .flexbox();
        .flex-wrap(nowrap);
        .flex(1 auto);

        .form-item {
            padding: 0px 3px;
            .flex(1);
        }
    }

    .form-item {
        display: block;

        .field-input {
            width: 100%;
            display: block;

            select,
            textarea {
                width: 100%;
            }

            input {
                &:not([type="checkbox"]),
                &:not([type="radio"]) {
                    width: 100%;
                }

                &[type="checkbox"],
                &[type="radio"] {
                  width: 1em;
                }
            }
        }

        .field-label,
        .field-legend, {
            font-size: 0.8em;
            display: block;
        }

    }

    // This is selecting based off of the element so that we can be sure to set
    // this if there is a prefix OR a suffix set. We can't assume they'll both
    // always be there.
    rx-form-item[suffix],
    rx-form-item[prefix] {
        .field-input {
            display: inline-block;
            width: auto;
        }
    }
}
